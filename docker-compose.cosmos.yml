services:
  postgres:
    image: postgres:16-alpine
    container_name: regata-postgres
    environment:
      POSTGRES_USER: regata
      POSTGRES_PASSWORD: regata
      POSTGRES_DB: regata
      TZ: America/Monterrey
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U regata -d regata"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/Regata.API/Dockerfile
    container_name: regata-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080

      Database__Provider: Postgres
      Database__Host: postgres
      Database__Port: "5432"
      Database__Database: regata
      Database__Username: regata
      Database__Password: regata
      Database__SslMode: Disable
      Database__SeedOnStart: "true"
      Database__ResetOnStart: "false"

      Payments__Provider: Stripe
      Stripe__ApiKey: 
      Stripe__PublishableKey: 
      Stripe__ReturnUrlBase: http://localhost:4200

      DATABASE_HOST: postgres
      DATABASE_PORT: "5432"
      DATABASE_NAME: regata
      DATABASE_USERNAME: regata
      DATABASE_PASSWORD: regata
      DATABASE_SSLMODE: Disable
      SEED_DB: "true"
      RESET_DB: "false"

  web:
    build:
      context: ./regata-web
      dockerfile: Dockerfile
      target: dev
    container_name: regata-web
    depends_on:
      api:
        condition: service_started
    environment:
      NODE_ENV: development
      NG_CLI_ANALYTICS: "false"

  api-tests:
    build:
      context: .
      dockerfile: src/Regata.API/Dockerfile
      target: test-runner
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Testing
    profiles:
      - test

  web-tests:
    build:
      context: ./regata-web
      dockerfile: Dockerfile
      target: test-runner
    profiles:
      - test

volumes:
  pgdata:
